#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    chain-length = <0>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

#define TAPPING_TERM 200

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

        td_lock: tap_dance_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LOCK";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Clear_BLE_Profile {
            bindings = <&bt BT_CLR>;
            key-positions = <38 5 1>;
        };

        Space {
            bindings = <&kp SPACE>;
            key-positions = <28 27 26>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 15 14>;
        };

        Capslock {
            bindings = <&kp CLCK>;
            key-positions = <17 18>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        Shift-Tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <3 4>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        Command-Right {
            bindings = <&kp RGUI>;
            key-positions = <19 20>;
        };

        Control-Right {
            bindings = <&kp RCTRL>;
            key-positions = <31 32>;
        };

        Command-Left {
            bindings = <&kp LGUI>;
            key-positions = <15 16>;
        };

        Control-Left {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <27 28>;
        };

        Screenshot {
            bindings = <&kp LG(LC(Q))>;
            key-positions = <25 26>;
        };
    };

    macros {
        git_status: git_status {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
            label = "GIT_STATUS";
        };

        git_commit_all: git_commit_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "GIT_COMMIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "BASE";
            bindings = <
&none  &kp Q  &kp W  &kp E           &kp R  &kp T          &kp Y        &kp U  &kp I          &kp O    &kp P      &none
&none  &kp A  &kp S  &kp D           &kp F  &kp G          &kp H        &kp J  &kp K          &kp L    &kp SEMI   &none
&none  &kp Z  &kp X  &kp C           &kp V  &kp B          &kp N        &kp M  &kp COMMA      &kp DOT  &kp SLASH  &none
                     &kp LEFT_SHIFT  &mo 1  &lt 2 ENTER    &lt 3 SPACE  &mo 4  &kp RIGHT_ALT
            >;
        };

        Numbers-Symbols {
            label = "Num+Sym";
            bindings = <
&none  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5       &kp N6            &kp N7             &kp N8          &kp N9           &kp N0         &none
&none  &kp EXCL   &kp AT     &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET         &kp AMPS           &kp ASTERISK    &kp LPAR         &kp RPAR       &none
&none  &kp GRAVE  &kp TILDE  &kp PIPE  &kp EQUAL  &kp PLUS     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH  &none
                             &trans    &trans     &trans       &trans            &trans             &trans
            >;
        };

        Navigation {
            label = "NAV";
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp K_MUTE         &kp HOME  &kp UP_ARROW  &kp END    &kp PAGE_UP    &none
&none  &trans        &trans        &trans        &trans        &trans          &kp C_VOLUME_UP    &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &none
&none  &trans        &trans        &trans        &trans        &trans          &kp C_VOLUME_DOWN  &trans    &trans        &trans     &trans         &none
                                   &trans        &trans        &trans          &trans             &trans    &trans
            >;
        };

        Functions {
            label = "FN";
            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp F11  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp F12  &none
                       &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Coding {
            bindings = <
&none  &trans  &trans           &trans       &trans     &trans      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp PLUS           &kp ASTRK      &none
&none  &trans  &git_commit_all  &git_status  &kp TILDE  &kp PIPE    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SQT    &kp DOUBLE_QUOTES  &kp GRAVE      &none
&none  &trans  &trans           &trans       &trans     &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &kp UNDER          &kp BACKSLASH  &none
                                &trans       &trans     &trans      &trans                &trans                 &trans
            >;

            label = "CODE";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_EXT {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
